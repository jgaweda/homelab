services:

  dockersocket:
    command:
      - haproxy
      - -f
      - /usr/local/etc/haproxy/haproxy.cfg
    container_name: dockersocket
    entrypoint:
      - /docker-entrypoint.sh
    environment:
      - TZ=America/Los_Angeles
      - HOST_OS=Unraid
      - CONTAINERS=1
      - POST=0
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - HAPROXY_VERSION=1.9.16
      - HAPROXY_URL=https://www.haproxy.org/download/1.9/src/haproxy-1.9.16.tar.gz
      - HAPROXY_SHA256=47174becf7c641c837b7338210f6194f266de45c49a38b68655fcd980f95bdbf
      - ALLOW_RESTARTS=0
      - AUTH=0
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - DISTRIBUTION=0
      - EVENTS=1
      - EXEC=0
      - IMAGES=0
      - INFO=0
      - LOG_LEVEL=info
      - NETWORKS=0
      - NODES=0
      - PING=1
      - PLUGINS=0
      - SECRETS=0
      - SERVICES=0
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=0
      - VERSION=1
      - VOLUMES=0
    expose:
      - 2375/tcp
    hostname: cd16ae24ea2d
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    ipc: private
    labels:
      org.opencontainers.image.created: '2021-01-26T10:32:59.090Z'
      org.opencontainers.image.description: Proxy over your Docker socket to restrict
        which requests it accepts
      org.opencontainers.image.licenses: Apache-2.0
      org.opencontainers.image.revision: b911e572d0d65c672f4da6d2ef06d7d95c89de6d
      org.opencontainers.image.source: https://github.com/Tecnativa/docker-socket-proxy
      org.opencontainers.image.title: docker-socket-proxy
      org.opencontainers.image.url: https://github.com/Tecnativa/docker-socket-proxy
      org.opencontainers.image.vendor: Tecnativa
      org.opencontainers.image.version: 0.1.1
    logging:
      driver: json-file
      options:
        max-file: 1
        max-size: 50m
    networks:
      - dockernetwork
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro


  swag:
    cap_add:
      - NET_ADMIN
    container_name: swag
    entrypoint:
      - /init
    environment:
      - VALIDATION=dns
      - EMAIL=josh@gaweda.io
      - DOCKER_HOST=dockersocket
      - TZ=America/Los_Angeles
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=cloudflare
      - ONLY_SUBDOMAINS=false
      - PUID=99
      - HOST_OS=Unraid
      - URL=gaweda.io
      - DOCKER_MODS=linuxserver/mods:universal-docker|linuxserver/mods:swag-auto-reload|linuxserver/mods:swag-auto-proxy|linuxserver/mods:swag-cloudflare-real-ip
      - UMASK=022
      - STAGING=false
      - PGID=100
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    #   - 'PS1=$(whoami)@$(hostname):$(pwd)\$ '
      - HOME=/root
      - TERM=xterm
      - DHLEVEL=2048
      - AWS_CONFIG_FILE=/config/dns-conf/route53.ini
      - S6_BEHAVIOUR_IF_STAGE2_FAILS=2
    hostname: 96479f4d195a
    image: lscr.io/linuxserver/swag
    ipc: private
    labels:
      build_version: 'Linuxserver.io version:- 1.27.0-ls127 Build-date:- 2022-05-03T18:00:17-05:00'
      maintainer: aptalca
      org.opencontainers.image.authors: linuxserver.io
      org.opencontainers.image.created: '2022-05-03T18:00:17-05:00'
      org.opencontainers.image.description: 'SWAG - Secure Web Application Gateway
        (formerly known as letsencrypt, no relation to Let''s Encryptâ„¢) sets up an
        Nginx webserver and reverse proxy with php support and a built-in certbot
        client that automates free SSL server certificate generation and renewal processes
        (Let''s Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.'
      org.opencontainers.image.documentation: https://docs.linuxserver.io/images/docker-swag
      org.opencontainers.image.licenses: GPL-3.0-only
      org.opencontainers.image.ref.name: 5df55cc0c0e207ab9833b61fc1ce05a9b5f9058d
      org.opencontainers.image.revision: 5df55cc0c0e207ab9833b61fc1ce05a9b5f9058d
      org.opencontainers.image.source: https://github.com/linuxserver/docker-swag
      org.opencontainers.image.title: Swag
      org.opencontainers.image.url: https://github.com/linuxserver/docker-swag/packages
      org.opencontainers.image.vendor: linuxserver.io
      org.opencontainers.image.version: 1.27.0-ls127
    logging:
      driver: json-file
      options:
        max-file: 1
        max-size: 50m
    networks:
      - dockernetwork
    ports:
      - 44301:443/tcp
      - 8001:80/tcp
      - 81:81/tcp
    volumes:
      - /mnt/user/appdata/swag/config:/config:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
networks:
  dockernetwork:
    external: true
    name: dockernetwork